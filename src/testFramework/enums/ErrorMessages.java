package testFramework.enums;

import java.io.Serializable;

/**
 *
 * @author Garth Bosch
 */
public enum ErrorMessages implements Serializable {

    // Logon Page    
    InActiveAdvisor("InActiveAdvisor", "You don't have access to the site. Please contact your Manager"),
    //    Search Page
    NoResultSearch("NoResult", "There are no results for the specified search criteria."),
    NoSurnameSearch("NoSurname", "You must specify the client's surname."),
    NoInitialsSearch("NoInitials", "You must specify the client's initials."),
    NoGenderSearch("NoGender", "You must specify the client's gender."),
    NoDOBSearch("NoDOB", "You must specify the client's date of birth."),
    //    Client Page
    NoSurnameClientDetail("NoSurname", "Please enter a surname."),
    NoInitialsClientDetail("NoInitials", "Please enter initials."),
    NoIDClientDetail("NoID", "Please enter an id number."),
    NoDOBClientDetail("NoDOB", "Please enter an date of birth."),
    NoGenderClientDetail("NoGender", "Please enter gender."),
    NoSchemeCodeClietDetail("NoSchemeCode", "Please enter a scheme code."),
    NumbersAndCharsSurname("NumbesAndChars", "Numbers and special characters are not allowed in the surname."),
    NumbersAndCharsFirstNames("NumbesAndChars", "Numbers and special characters are not allowed in the first names."),
    NumbersAndCharsInitials("NumbesAndChars", "Numbers and special characters are not allowed in the initials."),
    InvalidDOB("InvalidDOB", "Please enter a valid date of birth (dd/mm/yyyy)."),
    NumbersAndCharsMaidenName("NumbesAndChars", "Numbers and special characters are not allowed in the maiden name."),
    InvalidIDNo("InvalidIDNo", "Identity Number is not in a valid format or the check digit validation failed"),
    InvalidHomeCode("InvalidHomeCode", "Please enter a valid home code"),
    InvalidHomeNumber("InvalidHomeNumber", "Please enter a valid home number"),
    InvalidWorkCode("InvalidHomeNumber", "Please enter a valid work code"),
    InvalidWorkNumber("InvalidWorkNumber", "Please enter a valid work number"),
    InvalidFaxCode("InvalidFaxCode", "Please enter a valid fax code"),
    InvalidFaxNumber("InvalidFaxNumber", "Please enter a valid fax number"),
    InvalidCellNumber("InvalidCellNumber", "Please enter a valid cell number"),
    InvalidEmail("InvalidEmail", "Please enter a valid email address."),
    SchemeCodeNotFound("SchemeCodeNotFound", "Scheme [99999] not found."),
    InvalidLeadNumber("InvalidLeadNumber", "Please enter a whole number."),
    IDandDOBMismatch("IDandDOBMismatch", "Identity Number supplied does not match supplied date of birth"),
    SessionError("SessionError", "An internal state error has occurred"),
    //    Affordability Page
    NoOptionSelectedAffordability("NoOptionSelected", "This field is required."),
    NoValuesAffordability("NoValues", "This field is required."),
    SpecialCharsAffordability("SpecialChars", "Please enter a valid number."),
    NegativeValuesAffordability("NegativeValues", "Please enter a valid positive currency amount"),
    MonthlyExpensesMoreThanIncomeAffordability("MonthlyExpensesMoreThanIncome", "Monthly expenses must be less than Total income"),
    FinancialNeedsAnalysisRequired("FinancialNeedsAnalysisRequired", "A financial needs analysis is required"),
    //    Financial Needs Analysis
    SpecialChars3b_NeededQFNA("3b_NeededQ", "\"question_3b_Needed\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3b_RequiredQFNA("3b_RequiredQ", "\"question_3b_Required\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3b_PriorityQFNA("3b_PriorityQ", "\"question_3b_Priority\" has an invalid value of '`~'."),
    SpecialChars3c_NeededQFNA("3c_NeededQ", "\"question_3c_Needed\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3c_RequiredQFNA("3c_RequiredQ", "\"question_3c_Required\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3c_PriorityQFNA("3c_PriorityQ", "\"question_3c_Priority\" has an invalid value of '`~'."),
    SpecialChars3d_NeededQFNA("3d_NeededQ", "\"question_3d_Needed\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3d_RequiredQFNA("3d_RequiredQ", "\"question_3d_Required\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3d_PriorityQFNA("3d_PriorityQ", "\"question_3d_Priority\" has an invalid value of '`~'."),
    SpecialChars3e_NeededQFNA("3e_NeededQ", "\"question_3e_Needed\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3e_RequiredQFNA("3e_RequiredQ", "\"question_3e_Required\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3e_PriorityQFNA("3e_PriorityQ", "\"question_3e_Priority\" has an invalid value of '`~'."),
    SpecialChars3f_NeededQFNA("3f_NeededQ", "\"question_3f_Needed\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3f_RequiredQFNA("3f_RequiredQ", "\"question_3f_Required\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3f_PriorityQFNA("3f_PriorityQ", "\"question_3f_Priority\" has an invalid value of '`~'."),
    SpecialChars3g_CountQFNA("3g_CountQ", "\"question_3g_Count\" has an invalid value of '`~'. "),
    SpecialChars3g_NeededQFNA("3g_NeededQ", "\"question_3g_Needed\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3g_RequiredQFNA("3g_RequiredQ", "\"question_3g_Required\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3g_PriorityQFNA("3g_PriorityQ", "\"question_3g_Priority\" has an invalid value of '`~'."),
    SpecialChars3h_CountQFNA("3h_CountQ", "\"question_3h_Count\" has an invalid value of '`~'. "),
    SpecialChars3h_NeededQFNA("3h_NeededQ", "\"question_3h_Needed\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3h_RequiredQFNA("3h_RequiredQ", "\"question_3h_Required\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3h_PriorityQFNA("3h_PriorityQ", "\"question_3h_Priority\" has an invalid value of '`~'."),
    SpecialChars3i_NeededQFNA("3i_NeededQ", "\"question_3i_Needed\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3i_RequiredQFNA("3i_RequiredQ", "\"question_3i_Required\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3i_PriorityQFNA("3i_PriorityQ", "\"question_3i_Priority\" has an invalid value of '`~'."),
    SpecialChars3k_ValueQFNA("3k_ValueQ", "\"question_3k_Value\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3k_NeededQFNA("3b_NeededQ", "\"question_3k_Needed\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3k_RequiredQFNA("3b_RequiredQ", "\"question_3k_Required\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3k_PriorityQFNA("3b_PriorityQ", "\"question_3k_Priority\" has an invalid value of '`~'."),
    SpecialChars3l_ValueQFNA("3l_ValueQ", "\"question_3l_Value\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3l_NeededQFNA("3l_NeededQ", "\"question_3l_Needed\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3l_RequiredQFNA("3l_RequiredQ", "\"question_3l_Required\" has an invalid value of '`~!@#$%^*()_"),
    SpecialChars3l_PriorityQFNA("3l_PriorityQ", "\"question_3l_Priority\" has an invalid value of '`~'."),
    MaliciousInputData("MaliciousInputData", "Potentially malicious input has been detected. Processing have been stopped."),
    //    Benefit Selection
    NoAdditionlCommentsBenefitSelection("NoAdditionlComments", "This field is required."),
    NoReplacementBenefitSelection("NoReplacement", "Please select replacement."),
    NoBenefitSelectedBenefitSelection("NoBenefitSelected", "Please select at least one benefit"),
    MultipleFamilyBenefitsSelected("MultipleBenefitsSelected", "Only one Family Funeral Plan is permitted!"),
    MultipleLifeProductsBenefitsSelected("MultipleLifeProducts", "Multiple Life Plan Products cannot be selected"),
    SinglePremiumWithOtherBenefitsBenefitsSelected("SinglePremiumWithOtherBenefits", "Single Premium may not be selected with any other benefit"),
    //    Benefit Details
    ZeroTotalBenefitDetails("ZeroToal", "Total Premium of 0.0 not allowed"),
    PremiumExceedingAffordabilityBenefitDetails("PremiumExceedingAffordability", "Total premium exceeds amount highlighted during affordability analysis"),
    InvalidInputBenefitDetails("InvalidInput", "Invalid Input: Alpha and Special Characters ONLY (text4)"),
    InvalidDOBEducationWithWaiverBenefitDetails("InvalidDOB", "Education Plan with Premium Waiver date of birth\" has an invalid value of '29/02/2011'"),
    InvalidDOBEducationWithoutWaiverBenefitDetails("InvalidDOB", "Education Plan without Premium Waiver date of birth\" has an invalid value of '29/02/2011'"),
    InvalidDOBComprehensiveExtendedPlusFuneralBenefitDetails("InvalidDOB", "Comprehensive+ Extended Funeral Plan date of birth\" has an invalid value of '29/02/2011'"),
    InvalidDOBStandardExtendedFuneralBenefitDetails("InvalidDOB", "Standard Extended Funeral Plan date of birth\" has an invalid value of '29/02/2011'"),
    InvalidDOBDataComprehensiveExtendedPlusFuneralBenefitDetails("InvalidDOB", "Comprehensive+ Extended Funeral Plan date of birth\" has an invalid value of '70/13/9999'"),
    InvalidDOBComprehensivePlusFamilyFuneralBenefitDetails("InvalidDOB", "Comprehensive+ Family Funeral Plan date of birth\" has an invalid value of '29/02/2011'"),
    InvalidDOBFamilyFuneralCareBenefitDetails("InvalidDOB", "Family Funeral Care Plan date of birth\" has an invalid value of '29/02/2011'"),
    InvalidDOBStandardFamilyFuneralBenefitDetails("InvalidDOB", "Standard Family Funeral Plan date of birth\" has an invalid value of '29/02/2011'"),
    InvalidDOBBeneficiaries("InvalidDOB", "\"BirthDate\" has an invalid value of '29/02/2011'"),
    InvalidDOBComprehensiveParentsPlusFuneralBenefitDetails("InvalidDOB", "Comprehensive+ Parent Funeral Plan date of birth\" has an invalid value of '29/02/2011'"),
    InvalidDOBDataStandardExtendedFuneralBenefitDetails("InvalidDOB", "Standard Extended Funeral Plan date of birth\" has an invalid value of '70/13/9999'"),
    MaxEducationAgeBenefitDetails("MaxEducationAge", "Education product - Child over maximum age"),
    InvalidTermBenefitDetails("InvalidTerm", "Please enter a valid term"),
    InvalidCurrencyBenefitDetails("InvalidCurrency", "Please enter a valid number."),
    //    InvalidCurrencyBenefitDetails("InvalidCurrency", "Please enter a valid currency amount"),
    InvalidOldDateBenefitDetails("InvalidOldDate", "This date is earlier than current benefits allow. Please enter a more recent date of birth"),
    InvalidCoverInternalBenefitDetails("InvalidCoverInternal", "Unable to determine premium for selected plan"),
    RelationshipRequiredBenefitDetails("InvalidCoverInternal", "Relationship codes are compulsory"),
    NegativeCoverValueBenefitDetails("NegativeCoverValue", "Please enter a valid cover amount"),
    SMRejectAffordablePremiumBenefitDetails("SMRejectAffordablePremium", "Total premium must be less than for original policy"),
    BlankPremiumAmountBenefitDetails("BlankPremiumAmount", "This field is required"),
    NoPreferredCallTimeReferralLP("NoPreferredCallTimeReferralForLP", "Please select preferred calling times"),
    //    Beneficiaries
    InvalidPercentageBeneficiaries("InvalidPercentage", "Please enter a valid percentage"),
    //  Employment
    NoOptionSelfEmployedEmployment("NoOptionSelfEmployed", "Please specify whether you are self-employed"),
    InvalidSalaryPaymentDayEmployment("InvalidSalaryPaymentDay", "Please enter a valid (1-31) salary payment day."),
    InvalidEmpolyerCodeEmployment("InvalidEmpolyerCode", "The employer code is invalid."),
    InvalidAppointmentDateEmployment("InvalidAppointmentDate", "Please enter a valid appointment date."),
    InvalidWorksiteCodeEmployment("InvalidWorksiteCode", "The worksite code is invalid."),
    //  Payment
    InvalidPayOfficeCodePayment("InvalidPayOfficeCode", "The pay office code is invalid."),
    RequiredFieldPayment("RequiredField", "This field is required."),
    InvalidAmountPayment("InvalidAmount", "Please enter a valid positive currency amount"),
    IncorrectLengthSalRefNoPayment("IncorrectLengthSalRefNo", "The 'Salary Ref No' must be a length of 8 characters"),
    BlankPreferredDeductionDatePayment("BlankPreferedDeductionDate", "Please enter a valid preferred deduction date that is today or greater."),
    InvalidPreferredDeductionDatePayment("InvalidPreferredDeductionDate", "\"PreferredDeductionDate\" has an invalid value of '99/99/9999'."),
    InvalidLeapDatePreferredDeductionDatePayment("InvalidLeapDatePreferredDeductionDate", "\"PreferredDeductionDate\" has an invalid value of '29/02/2011'."),
    InvalidBranchCodePayment("InvalidBranchCode", "Invalid 'Branch code'"),
    UnknownBranchCodePayment("UnknownBranchCode", "BRANCH CODE NOT KNOWN TO VALIDATION RULES DATABASE"),
    InvalidTypeOfAccountPayment("InvalidTypeOfAccount", "Invalid 'Type of account'"),
    BankValidationPayment("BankValidation", "Bank Validation not completed"),
    BlankAccountNumberPayment("InvalidAccountNumber", "Invalid 'Account number'"),
    InvalidAccountNumberPayment("InvalidAccountNumber", "ACCOUNT NUMBER FAILED EXCEPTION F"),
    InvalidAccountNumberLengthPayment("InvalidAccountNumberLength", "INVALID ACCOUNT NUMBER - INCORRECT LENGTH"),
    EmployeeNotListedPayment("EmployeeNotListed", "Employee number not listed"),
    DifferentSinglePremiumInvestmentAmountsPayment("DifferentSinglePremiumInvestmentAmounts", "Amount does not match Investment Amount"),
    StaffCodeNotFound("StaffCodeNotFound", "Staff code not found"),
    //    Supporting Forms
    FICAFormSummaryErrorMessage("FICAFormSummaryErrorMessage", "Please complete the FICA Addendum Form"),
    FRDRFormSummaryErrorMessage("FRDRFormSummaryErrorMessage", "Please complete the FRDR Form"),
    RPARFormSummaryErrorMessage("FRDRFormSummaryErrorMessage", "Please complete the ASISA RPAR Form"),
    NoResidentialAddressFICAForm("NoResidentialAddressFICAForm", "Please capture the Residential Address"),
    NoPostalCodeFICAForm("NoPostalCodeFICAForm", "Please capture the Postal Code"),
    NoSourceOfIncomeFICAForm("NoSourceOfIncomeFICAForm", "Please capture the Source of Income"),
    NoSourceOfFundsInvestmentFICAForm("NoSourceOfFundsInvestmentFICAForm", "Please capture the Source of Funds for this Investment"),
    NoProofOfResidentialAddressFICAForm("NoProofOfResidentialAddressFICAForm", "Please capture Proof of Residential Address"),
    NoProofOfClientIdentityFICAForm("NoProofOfClientIdentityFICAForm", "Please capture Proof of Client Identity"),
    NoReasonForUnavailabilityOfRSAGreenBarCodedIdentityFICAForm("NoReasonForUnavailabilityOfRSAGreenBarCodedIdentityFICAForm", "Please capture the Reason for Unavailability of RSA green bar coded identify"),
    NoProductTypeFRDRForm("NoProductTypeFRDRForm", "Please select the Type of Product(s) which is being replaced"),
    NoNameOfInsurerFRDRForm("NoNameOfInsurerFRDRForm", "Please capture the Insurer of the policy which his being replaced"),
    NoPolicyNumberFRDRForm("NoPolicyNumberFRDRForm", "Please capture the policy number which is being replaced"),
    NoExplainedFeesAndChargesFRDRForm("NoExplainedFeesAndChargesFRDRForm", "Please confirm that Fees and Charges have been explained"),
    NoExplainedTaxImplicationsFRDRForm("NoExplainedTaxImplicationsFRDRForm", "Please confirm that the Tax Implications was explained"),
    NoExplainedInvestmentRiskFRDRForm("NoExplainedInvestmentRiskFRDRForm", "Please confirm that the Investment Risk was explained"),
    NoExplainedImpactOfAgeChangesOnPremiumFRDRForm("NoExplainedImpactOfAgeChangesOnPremiumFRDRForm", "Please confirm that the Impact of Age Changes on the Premium was explained"),
    NoExplainedSpecicalTermsAndConditionsFRDRForm("NoExplainedSpecicalTermsAndConditionsFRDRForm", "Please confirm that the Special terms & Conditions / Exclusions of liability & Waiting Periods / Loadings & Penalties / Excesses, restrictions or circumstances in which benefits will not be provided was explained"),
    NoExplainedImpactOfHealthChangesOnPremiumFRDRForm("NoExplainedImpactOfHealthChangesOnPremiumFRDRForm", "Please confirm that The impact of health changes on the premium was explained"),
    NoExplainedToWhatExtendReplacementProductIsRealiableFRDRForm("NoExplainedImpactOfHealthChangesOnPremiumFRDRForm", "Please confirm that the section To what extent the replacement product is readily realisable or the relevant funds accessible was explained"),
    NoPurposeOfReplacementFRDRForm("NoPurposeOfReplacementFRDRForm", "Purpose of Replacement not specified"),
    NoAdvisorSignatureFRDRandRPARForm("NoAdvisorSignatureFRDRForm", "Please capture the Adviser signature"),
    NoClientSignatureFRDRandRPARForm("NoClientsignatureFRDRForm", "Please capture the Client signature"),
    NoReplacementPolicyDataRPARForm("NoReplacementPolicyDataRPARForm", "At least one replacement policy should be inserted"),
    NoReplacementPolicyTypeOfPolicyRPARForm("NoReplacementPolicyTypeOfPolicyRPARForm", "Please select the Type of Policy which is being replaced"),
    NoReplacementPolicyNumberRPARForm("NoReplacementPolicyNumberRPARForm", "Please capture the policy number of the policy which is being replaced"),
    NoReplacementPolicyInsurerRPARForm("NoReplacementPolicyNumberRPARForm", "Please capture the Insurer of the policy which is being replaced"),
    NoIndicateIfExistingPolicyCanBeAmendedRPARForm("NoReplacementPolicyNumberRPARForm", "Please indicate if the existing policy can be amended"),
    NoReasonForReplacingExistingPolicyRPARForm("NoReasonForReplacingExistingPolicyRPARForm", "Please capture the reason(s) for replacing the existing policy"),
    //    Summary Page
    //    FNANotificationSummary("FNANoticication", "Was a full financial needs analysis done? No"),
    NoBenefitsSummary("NoBenefits", "No Benefits have been selected!"),
    BlankSignedAtSummary("BlankSignedAt", "Please enter the 'Signed At' place"),
    BlankClientSignatureSummary("BlankClientSignature", "Please capture the client's signature"),
    BlankAdvisorSignatureSummary("BlankAdvisorSignature", "Please capture the adviser's signature"),
    BlankPayersSignatureSummary("BlankPayersSignature", "Please capture the payer's signature"),
    NonSinglPremiumPaymentMethodSummary("NonSinglPremiumPaymentMethod", "The non-Single Premium benefit cannot have the single premium payment method"),
    SinglPremiumPaymentMethodSummary("SinglPremiumPaymentMethod", "The Single Premium benefit does not have the single premium payment method"),
    DifferentPremiumsSummary("DifferentPremiums", "The Single Premium amount and the amount that the client confirmed are different"),
    //    Incomplete Applications
    NoResultsFoundIncompleteApplications("NoResultsFound", "There are no results."),
    //    Rate Calculator
    NoDateOfBirth("NoDateOfBirth", "Please enter a date of birth."),
    NoBenefitRangeSelected("NoBenefitRangeSelected", "[Benefit Range] is mandatory for benefit selected"),
    NoDateEntered("NoDateEntered", "[Date of Birth] is compulsory"),
    PremiumAndCoverEntered("PremiumAndCoverEntered", "Please capture either [Premium] or [Cover] only"),
    PremiumMaxIndividualFuneralCare("PremiumMaxIndividualFuneralCare", "Premium provided is more than maximum premium for this product. Premium provided: R400.00 Max Premium: R84.00"),
    PremiumMaxFamilyFuneralCare("PremiumMaxFamilyFuneralCare", "Premium provided is more than maximum premium for this product. Premium provided: R400.00 Max Premium: R116.00"),
    PremiumMaxParentFuneralCare("PremiumMaxParentFuneralCare", "Premium provided is more than maximum premium for this product. Premium provided: R400.00 Max Premium: R120.00"),
    CoverMaxFuneralCare("PremiumMaxFuneralCare", "Cover requested is more than maximum cover for this product. Cover requested: R30000.00 Max Cover: R20000.00"),
    PremiumMaxIndividualStandardFuneral("PremiumMaxIndividualStandardFuneral", "Premium provided is more than maximum premium for this product. Premium provided: R800.00 Max Premium: R85.00"),
    PremiumMaxFamilyStandardFuneral("PremiumMaxFamilyStandardFuneral", "Premium provided is more than maximum premium for this product. Premium provided: R800.00 Max Premium: R138.00"),
    PremiumMaxParentStandardFuneral("PremiumMaxParentStandardFuneral", "Premium provided is more than maximum premium for this product. Premium provided: R800.00 Max Premium: R136.00"),
    PremiumMaxExtendedStandardFuneral("PremiumMaxExtendedStandardFuneral", "Cover requested is more than maximum cover for this product. Cover requested: R47059.00 Max Cover: R20000.00"),
    CoverMaxStandardFuneral("CoverMaxStandardFuneral", "Cover requested is more than maximum cover for this product. Cover requested: R40000.00 Max Cover: R20000.00"),
    PremiumMaxIndividualComprehensiveFuneral("PremiumMaxIndividualComprehensiveFuneral", "Premium provided is more than maximum premium for this product. Premium provided: R900.00 Max Premium: R390.00"),
    PremiumMaxFamilyComprehensiveFuneral("PremiumMaxFamilyComprehensiveFuneral", "Premium provided is more than maximum premium for this product. Premium provided: R900.00 Max Premium: R575.00"),
    PremiumMaxParentComprehensiveFuneral("PremiumMaxParentComprehensiveFuneral", "Premium provided is more than maximum premium for this product. Premium provided: R900.00 Max Premium: R288.00"),
    PremiumMaxExtendedComprehensiveFuneral("PremiumMaxExtendedComprehensiveFuneral", "Cover requested is more than maximum cover for this product. Cover requested: R47368.00 Max Cover: R30000.00"),
    CoverMaxIndiviualComprehensiveFuneral("CoverMaxIndiviualComprehensiveFuneral", "Cover requested is more than maximum cover for this product. Cover requested: R60000.00 Max Cover: R50000.00"),
    CoverMaxFamilyComprehensiveFuneral("CoverMaxFamilyComprehensiveFuneral", "Cover requested is more than maximum cover for this product. Cover requested: R60000.00 Max Cover: R50000.00"),
    CoverMaxParentComprehensiveFuneral("CoverMaxParentComprehensiveFuneral", "Cover requested is more than maximum cover for this product. Cover requested: R60000.00 Max Cover: R30000.00"),
    CoverMaxExtendedComprehensiveFuneral("CoverMaxExtendedComprehensiveFuneral", "Cover requested is more than maximum cover for this product. Cover requested: R60000.00 Max Cover: R30000.00"),
    //    Console
    NoDataFoundApplicationManagement("NoDataFound", "No data found for the application"),
    BlankApplicationNoApplicationManagement("BlankApplicationNo", "Please supply an application number"),
    NoEventsApplicationManagement("NoEvents", "No events found for application number"),
    InvalidStartDateApprovalControl("InvalidStartDate", "\"StartDate\" has an invalid value of '99/99/9999'"),
    InvalidEndDateApprovalControl("InvalidEndDate", "\"EndDate\" has an invalid value of '99/99/9999'"),
    InvalidLeapYearDateApprovalControl("InvalidLeapYearDate", "\"StartDate\" has an invalid value of '29/02/2011'"),
    StartDateGreaterThanEndDateApprovalControl("StartDateGreaterThanEndDate", "Please enter a valid end date (end date must be greater than start date"),
    NoStartDateFNAcheckReport("NoStartDate", "Please enter the start date"),
    NoEndDateFNAcheckReport("NoEndDate", "Please enter the end date"),
    InvalidStartDateFNAcheckReport("InvalidStartDate", "\"StartDate\" has an invalid value of '99/99/9999'"),
    InvalidEndDateFNAcheckReport("InvalidEndDate", "\"EndDate\" has an invalid value of '99/99/9999'"),
    InvalidLeapYearDateFNAcheckReport("InvalidLeapYearDate", "\"StartDate\" has an invalid value of '29/02/2011'"),
    StartDateGreaterThanEndDateFNAcheckReport("StartDateGreaterThanEndDate", "Please enter a valid end date (end date must be greater than start date"),
    StartDateGreaterThanSixMonthsFNAcheckReport("StartDateGreaterThanSixMonths", "Please enter a start date no more than 6 months in the past"),
    EndDateGreaterThanTwoDaysFNAcheckReport("EndDateGreaterThanTwoDays", "Please enter an end date no more than 1 day from today"),
    BlankFullNameUserManagement("BlankFullName", "Please enter the user's full name."),
    BlankStaffCodeUserManagement("BlankStaffCode", "Please enter the user's staff code."),
    BlankUserNameUserManagement("BlankUserName", "Please enter the user's user name."),
    NoRoleSelectedUserManagement("NoRoleSelected", "The SelectedRoles field is required."),
    InCorrectStaffCodeUserManagement("InCorrectStaffCode", "The staff code must be 6 characters long, all numerical."),
    ExistingUserManagement("ExistingUser", "User with username [OM37389] already exists on database"),
    NonMagnifyUserUserManagement("NonMagnifyUser", "Person [OM12587] does not exist on Magnify - is compulsory for Role [BRANCH_SALES_MANAGER]"),
    DeleteLoggedInUserUserManagement("DeleteLoggedInUser", "You may not attempt to modify your own profile"),
    RemovingAdminRoleUserManagement("RemovingAdminRole", "You may not remove [ADMINISTRATOR] role from your own profile"),
    //  Referrals
    NoTitleReferral("NoTitle", "Title is required"),
    NoFirstNameReferral("NoFirstName", "First Name is required"),
    NoLastNameReferral("NoLastName", "Last Name is required"),
    NoContactNumberReferral("NoContactNumber", "Contact Number is required"),
    NoPreferredCallTimeReferral("NoPreferredCallTime", "Preferred Calling Time is required"),
    InvalidContacNumberReferral("InvalidContactNumber", "Contact Number must be exactly 10 numeric digits and begin with a zero"),
    //    Inactive Advisor
    CloneableAndStandardApplicationsTransfer("CloneableAndStandardApplicationsTransfer", "Items are selected in more than one grid! \n Please clear the other selections."),
    InactiveAdvisorSettingsMaxIncompleteAppsValues("InactiveAdvisorSettingsMaxIncompleteAppsValues", "\"Incomplete\" must be between 1 and 60"),
    InactiveAdvisorSettingsMaxRejectedAppsValues("InactiveAdvisorSettingsMaxRejectedAppsValues", "\"Rejected\" must be between 1 and 60"),
    InactiveAdvisorSettingsResignationDate("InactiveAdvisorSettingsResignationDate", "\"Inactive Adviser\" must be between 1 and 90"),
    InactiveAdvisorSettingsBlankIncompleteAppsValues("InactiveAdvisorSettingsBlankIncompleteAppsValues", "\"Incomplete\" is required"),
    InactiveAdvisorSettingsBlankRejectedAppsValues("InactiveAdvisorSettingsBlankRejectedAppsValues", "\"Rejected\" is required"),
    InactiveAdvisorSettingsBlankResignationDate("InactiveAdvisorSettingsBlankResignationDate", "\"Inactive Adviser\" is required"),
    //    Approval Delegation Management
    NoDelegeeSelectedDelegation("NoDelegeeSelected", "Please select an approver to delegate authority to"),
    DelegationStartDateInThePast("DelegationStartDateInThePast", "Please enter a start date that is not in the past"),
    DelegationEndDateLessThanStartDate("DelegationEndDateLessThanStartDate", "Please enter a valid end date (end date must be greater than start date) for the selected approver"),
    NoSecondaryApprover("NoSecondaryApprover", "Please select an Approver for the Supervisor"),
    NoBranchesLinkToRole("NoBranchesLinkToRole", "An error occurred. This is due to you not having any branches linked to your profile."),
    NoActiveEndDelegation("NoActiveEndDelegation", "The delegation selected is not the active delegation"),
    InvalidEndDelegation("InvalidEndDelegation", "The delegation selected is not a valid delegation"),
    NoDelegationSelected("NoDelegationSelected", "Please select a delegation to end"),
    //    Advisor Profile
    AgentWebServiceOffLineAdvisorProfile("AgentWebServiceOffLine", "Unable to validate accreditation details, please try again later."),
    //    Sales Manager Logon
    NotFAISaccreditedMessage("NotFAISaccreditedMessage", "Supervisor does not meet FAIS Requirements"),;
    private static final long serialVersionUID = -6021731140979373963L;
    private final String name;
    private final String description;

    ErrorMessages(String name, String description) {
        this.name = name;
        this.description = description;

    }

    public String getName() {
        return name;
    }

    public String getDescription() {
        return description;
    }
}
